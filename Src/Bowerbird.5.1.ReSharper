<Configuration>
  <SharedSolutionTemplateManager>
    <FileTemplates>
      <Template uid="8df6a7af-e54c-4bae-9144-cd180a7da6eb" shortcut="" description="DomainModel" text="/* Bowerbird V1 &#xD;&#xA;&#xD;&#xA; Licensed under MIT 1.1 Public License&#xD;&#xA;&#xD;&#xA; Developers: &#xD;&#xA; * Frank Radocaj : frank@radocaj.com&#xD;&#xA; * Hamish Crittenden : hamish.crittenden@gmail.com&#xD;&#xA; &#xD;&#xA; Project Manager: &#xD;&#xA; * Ken Walker : kwalker@museum.vic.gov.au&#xD;&#xA; &#xD;&#xA; Funded by:&#xD;&#xA; * Atlas of Living Australia&#xD;&#xA; &#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;namespace Bowerbird.Core.DomainModels&#xD;&#xA;{&#xD;&#xA;	#region Namespaces&#xD;&#xA;&#xD;&#xA;	using System.Collections.Generic;&#xD;&#xA;	using Bowerbird.Core.DesignByContract;&#xD;&#xA;	using Bowerbird.Core.Events;&#xD;&#xA;	using System;&#xD;&#xA;	using Bowerbird.Core.DomainModels.DenormalisedReferences;&#xD;&#xA;&#xD;&#xA;	#endregion&#xD;&#xA;&#xD;&#xA;    public class $CLASS$ : DomainModel&#xD;&#xA;    {&#xD;&#xA;        #region Members&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Constructors&#xD;&#xA;&#xD;&#xA;        protected $CLASS$() : base() { }&#xD;&#xA;&#xD;&#xA;        public $CLASS$(&#xD;&#xA;            User createdByUser&#xD;&#xA;            //,DateTime timestamp&#xD;&#xA;			)&#xD;&#xA;            : this()&#xD;&#xA;        {&#xD;&#xA;            Check.RequireNotNull(createdByUser, &quot;createdByUser&quot;);&#xD;&#xA;&#xD;&#xA;            //PostedOn = timestamp;&#xD;&#xA;            User = createdByUser;&#xD;&#xA;&#xD;&#xA;            SetDetails(&#xD;&#xA;            );&#xD;&#xA;&#xD;&#xA;            EventProcessor.Raise(new DomainModelCreatedEvent&lt;$CLASS$&gt;(this, createdByUser));&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Properties&#xD;&#xA;&#xD;&#xA;        public DenormalisedUserReference User { get; private set; }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Methods&#xD;&#xA;&#xD;&#xA;        private void SetDetails()&#xD;&#xA;        {&#xD;&#xA;            &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        public $CLASS$ UpdateDetails(&#xD;&#xA;			User updatedByUser&#xD;&#xA;			)&#xD;&#xA;        {&#xD;&#xA;            Check.RequireNotNull(updatedByUser, &quot;updatedByUser&quot;);&#xD;&#xA;&#xD;&#xA;            SetDetails(&#xD;&#xA;			);&#xD;&#xA;&#xD;&#xA;            EventProcessor.Raise(new DomainModelUpdatedEvent&lt;$CLASS$&gt;(this, updatedByUser));&#xD;&#xA;&#xD;&#xA;            return this;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;    }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="False">
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="" initialRange="0" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="DomainModel" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
      <Template uid="f9822d0f-f8ad-4e9a-a55c-723af1445bb7" shortcut="" description="CommandHandlerTest" text="/* Bowerbird V1 - Licensed under MIT 1.1 Public License&#xD;&#xA;&#xD;&#xA; Developers: &#xD;&#xA; * Frank Radocaj : frank@radocaj.com&#xD;&#xA; * Hamish Crittenden : hamish.crittenden@gmail.com&#xD;&#xA; &#xD;&#xA; Project Manager: &#xD;&#xA; * Ken Walker : kwalker@museum.vic.gov.au&#xD;&#xA; &#xD;&#xA; Funded by:&#xD;&#xA; * Atlas of Living Australia&#xD;&#xA; &#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;namespace Bowerbird.Core.Test.CommandHandlers&#xD;&#xA;{&#xD;&#xA;    #region Namespace&#xD;&#xA;&#xD;&#xA;    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Text;&#xD;&#xA;&#xD;&#xA;    using NUnit.Framework;&#xD;&#xA;    using Moq;&#xD;&#xA;    using Raven.Client;&#xD;&#xA;	&#xD;&#xA;	using Bowerbird.Core.DomainModels.DenormalisedReferences;&#xD;&#xA;	using Bowerbird.Core.DomainModels.MediaResources;&#xD;&#xA;	using Bowerbird.Core.Extensions;&#xD;&#xA;    using Bowerbird.Core.CommandHandlers;&#xD;&#xA;    using Bowerbird.Core.DesignByContract;&#xD;&#xA;    using Bowerbird.Core.DomainModels;&#xD;&#xA;    using Bowerbird.Core.Repositories;&#xD;&#xA;    using Bowerbird.Core.Commands;&#xD;&#xA;    using Bowerbird.Test.Utils;&#xD;&#xA;&#xD;&#xA;    #endregion&#xD;&#xA;&#xD;&#xA;    public class $CLASS$CommandHandlerTest&#xD;&#xA;    {&#xD;&#xA;        #region Test Infrastructure&#xD;&#xA;&#xD;&#xA;        private IDocumentStore _store;&#xD;&#xA;&#xD;&#xA;        [SetUp]&#xD;&#xA;        public void TestInitialize()&#xD;&#xA;        {&#xD;&#xA;            _store = DocumentStoreHelper.TestDocumentStore();            &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        [TearDown]&#xD;&#xA;        public void TestCleanup()&#xD;&#xA;        {&#xD;&#xA;            _store = null;            &#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Test Helpers&#xD;&#xA;&#xD;&#xA;        private $CLASS$CommandHandler Test$CLASS$CommandHandler(IDocumentSession session)&#xD;&#xA;        {&#xD;&#xA;            return new $CLASS$CommandHandler(&#xD;&#xA;                //new Repository&lt;User&gt;(session),&#xD;&#xA;                );&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        private $CLASS$Command Test$CLASS$Command()&#xD;&#xA;        {&#xD;&#xA;            return new $CLASS$Command()&#xD;&#xA;                       {&#xD;&#xA;                           UserId = FakeValues.UserId.PrependWith(&quot;users/&quot;)&#xD;&#xA;                       };&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Constructor tests&#xD;&#xA;&#xD;&#xA;        [Test]&#xD;&#xA;        [Category(TestCategory.Unit)]&#xD;&#xA;        public void $CLASS$CommandHandler_Constructor_Passing_Null_SOMETHING_Throws_DesignByContractException()&#xD;&#xA;        {&#xD;&#xA;            Assert.IsTrue(&#xD;&#xA;                BowerbirdThrows.Exception&lt;DesignByContractException&gt;(() =&gt;&#xD;&#xA;                    new $CLASS$CommandHandler(null)));&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Property tests&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Method tests&#xD;&#xA;&#xD;&#xA;        [Test]&#xD;&#xA;        [Category(TestCategory.Unit)]&#xD;&#xA;        public void $CLASS$CommandHandler_Handle_Passing_Null_$CLASS$Command_Throws_DesignByContractException()&#xD;&#xA;        {&#xD;&#xA;            var commandHandler = new $CLASS$CommandHandler(/*SOMETHING*/);&#xD;&#xA;&#xD;&#xA;            Assert.IsTrue(&#xD;&#xA;                BowerbirdThrows.Exception&lt;DesignByContractException&gt;(() =&gt;&#xD;&#xA;                    commandHandler.Handle(null)));&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        [Test]&#xD;&#xA;        [Category(TestCategory.Persistance)]&#xD;&#xA;        public void $CLASS$CommandHandler_Handle_Creates_Deletes_Updates_$CLASS$()&#xD;&#xA;        {&#xD;&#xA;            using (var session = _store.OpenSession())&#xD;&#xA;            {&#xD;&#xA;                ////&#xD;&#xA;            }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion &#xD;&#xA;    }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="False">
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="" initialRange="0" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="CommandHandlerTest" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
      <Template uid="7abe1b02-d71a-4bf4-b655-182b653ad0e6" shortcut="" description="CommandHandler" text="/* Bowerbird V1 - Licensed under MIT 1.1 Public License&#xD;&#xA;&#xD;&#xA; Developers: &#xD;&#xA; * Frank Radocaj : frank@radocaj.com&#xD;&#xA; * Hamish Crittenden : hamish.crittenden@gmail.com&#xD;&#xA; &#xD;&#xA; Project Manager: &#xD;&#xA; * Ken Walker : kwalker@museum.vic.gov.au&#xD;&#xA; &#xD;&#xA; Funded by:&#xD;&#xA; * Atlas of Living Australia&#xD;&#xA; &#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;namespace Bowerbird.Core.CommandHandlers&#xD;&#xA;{&#xD;&#xA;    #region Namespaces&#xD;&#xA;&#xD;&#xA;    using Bowerbird.Core.DesignByContract;&#xD;&#xA;    using Bowerbird.Core.DomainModels;&#xD;&#xA;    using Bowerbird.Core.Repositories;&#xD;&#xA;    using Bowerbird.Core.Commands;&#xD;&#xA;    using Bowerbird.Core.DomainModels.MediaResources;&#xD;&#xA;&#xD;&#xA;    #endregion&#xD;&#xA;&#xD;&#xA;    public class $CLASS$CommandHandler : ICommandHandler&lt;$CLASS$Command&gt;&#xD;&#xA;    {&#xD;&#xA;        #region Fields&#xD;&#xA;&#xD;&#xA;        private readonly IRepository&lt;User&gt; _userRepository;&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Constructors&#xD;&#xA;&#xD;&#xA;        public $CLASS$CommandHandler(&#xD;&#xA;            IRepository&lt;User&gt; userRepository&#xD;&#xA;            )&#xD;&#xA;        {&#xD;&#xA;            Check.RequireNotNull(userRepository, &quot;userRepository&quot;);&#xD;&#xA;&#xD;&#xA;            _userRepository = userRepository;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Properties&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Methods&#xD;&#xA;&#xD;&#xA;        public void Handle($CLASS$Command command)&#xD;&#xA;        {&#xD;&#xA;            Check.RequireNotNull(command, &quot;command&quot;);&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;    }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="False">
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="" initialRange="0" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="CommandHandler" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
      <Template uid="dbaee15e-1ba2-478f-9426-01b2f093d589" shortcut="" description="Command" text="/* Bowerbird V1 - Licensed under MIT 1.1 Public License&#xD;&#xA;&#xD;&#xA; Developers: &#xD;&#xA; * Frank Radocaj : frank@radocaj.com&#xD;&#xA; * Hamish Crittenden : hamish.crittenden@gmail.com&#xD;&#xA; &#xD;&#xA; Project Manager: &#xD;&#xA; * Ken Walker : kwalker@museum.vic.gov.au&#xD;&#xA; &#xD;&#xA; Funded by:&#xD;&#xA; * Atlas of Living Australia&#xD;&#xA; &#xD;&#xA;*/&#xD;&#xA;				&#xD;&#xA;namespace Bowerbird.Core.Commands&#xD;&#xA;{&#xD;&#xA;    #region Namespaces&#xD;&#xA;&#xD;&#xA;    using System;&#xD;&#xA;    using System.Collections.Generic;&#xD;&#xA;    using System.Linq;&#xD;&#xA;    using System.Text;&#xD;&#xA;    using System.ComponentModel.DataAnnotations;&#xD;&#xA;&#xD;&#xA;    #endregion&#xD;&#xA;&#xD;&#xA;    public class $CLASS$Command : CommandBase&#xD;&#xA;    {&#xD;&#xA;        #region Fields&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Constructors&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Properties&#xD;&#xA;&#xD;&#xA;        public string UserId { get; set; }&#xD;&#xA;&#xD;&#xA;        public string Id { get; set; }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;&#xD;&#xA;        #region Methods&#xD;&#xA;&#xD;&#xA;        public override ICollection&lt;ValidationResult&gt; ValidationResults()&#xD;&#xA;        {&#xD;&#xA;            throw new NotImplementedException();&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        #endregion&#xD;&#xA;		&#xD;&#xA;    }&#xD;&#xA;}" reformat="True" shortenQualifiedReferences="False">
        <Categories />
        <Variables>
          <Variable name="CLASS" expression="" initialRange="0" />
        </Variables>
        <CustomProperties>
          <Property key="FileName" value="Command" />
          <Property key="Extension" value="cs" />
          <Property key="ValidateFileName" value="True" />
        </CustomProperties>
      </Template>
    </FileTemplates>
  </SharedSolutionTemplateManager>
</Configuration>